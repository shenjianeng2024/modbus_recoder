name: Build Windows EXE

on:
  push:
    branches: [ main, epic/modbus_reader ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    name: Build Windows EXE
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install pnpm
      run: npm install -g pnpm@8
        
    - name: Get pnpm store directory
      shell: pwsh
      run: |
        echo "STORE_PATH=$(pnpm store path)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: x86_64-pc-windows-msvc
        
    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install frontend dependencies
      run: pnpm install
      
    - name: Build frontend
      run: pnpm build
      
    - name: Install Tauri CLI
      run: cargo install tauri-cli --locked
      
    - name: Build Windows EXE
      run: cargo tauri build --target x86_64-pc-windows-msvc
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-exe
        path: |
          src-tauri/target/x86_64-pc-windows-msvc/release/Modbus Reader.exe
        retention-days: 30
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          src-tauri/target/x86_64-pc-windows-msvc/release/Modbus Reader.exe
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}